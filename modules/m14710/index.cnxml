<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Pat Masson - Summary - Barriers to the Adoption of Open Source: Personal and Professional Observations</title>
  <metadata><md:content-id>undefined</md:content-id><md:title/><md:uuid>d8c4d25c-f9f2-4a6c-84ca-37fde855a4c5</md:uuid>
</metadata>
  <content>
    <section id="id-62789815253">
      <title>Summary - Barriers to the Adoption of Open Source: Personal and Professional Observations</title>
      <para id="id14871094">“Barriers to the Adoption of Open Source: Personal and Professional Observations,” the fourth installment of the Impact of Open Source Software Series, was posted on April 18, 2007, by Pat Masson, CIO of SUNY Delhi. Thanks Pat!</para>
    </section>
    <section id="id-527389877197">
      <title>Open Source Software is not a Technology Issue.</title>
      <para id="id3834519">Pat starts out with the observation that the debate around Open Source is no longer really about the technology. Many of the issues around support, quality, and functionality are pretty much settled. Open Source Software is widely used in the commercial and educational sectors and increasing numbers of vendors are contributing to OSS communities and integrating OSS into their offerings. In addition, Pat cites instances in which the agile design and development process indicative of OSS has been adopted by commercial vendors. So, the debate in the commercial and educational sectors among technologists is pretty much over, while academic decision makers are still debating about OSS, which has become the adoption bottleneck.</para>
    </section>
    <section id="id-344378122288">
      <title>You’re Soaking in I.T.</title>
      <para id="id12886900">The use of OSS in academic computing is sometimes invisible, because it meets the requirements, the end users or academic decision makers are not even aware that they are using OSS. As the academy increasing depends on software to support mission critical tasks and as OSS becomes ubiquitous across application and system classes, who will make decisions about the use of OSS? Pat takes this a step further by discussing the differences between how the treatment of OSS low in the software stack relative to very visible applications differs. He points out that software low on the stack that is OSS meets with little debate and has virtually no visibility to academic decision makers, while applications at the top of the stack or residing on the desktop are treated differently. This is captured in the following question, “How many of the folks governing online education and debating Moodle are also debating the LAMP stack?” In addition, it is pointed out that because vendors are adopting OSS, but not advertising the fact, many academic decision makers are selecting OSS based applications without knowing it, so they treat OSS objectively. Pat suggests that this is an overall governance issue and a function of awareness of academic decision makers relative to software across the stack.</para>
    </section>
    <section id="id-521013933054">
      <title>Any sufficiently advanced technology is indistinguishable from magic.</title>
      <para id="id5853536">Because many end users, just want the software to work, OSS has become a default option in many IT shops because of the clear technological benefits of exposed code and an open distribution license. Pat asks the rather rhetorical question about what level end users and academic administrators should be engaging in dialog about software. Should it principally be about a) the underlying architecture, b) development methodologies, or c) the application itself (functionality)? Pat indicates that the productive part of the conversation, if we want end users to think about software as a tool to get stuff done, is around the functionality of the software, not the technology. That is, does the software function appropriately and meet business needs? When this is the focus, OSS will be viewed, from the end user perspective, the same way as commercial software. The idea is that focusing on functionality, reduces the unfounded technological concerns of many academic end users, allowing the IT department to assess the technological merit of the software, which would include the quality of the code and the ability of the OSS community and associated organizations to do the right thing by the adopting organization based also on the adoptor’s capacity. The punch line is about division of labor. The end users should be responsible for knowing, defining, and articulating the functionality requirements, and the IT department is responsible for making them happen automagically, while not confusing the issue with technological concerns about OSS and proprietary software.</para>
    </section>
    <section id="id-86103491599">
      <title>Open Source Software Goes to Eleven</title>
      <para id="id9188493">Pat argues that there are topics that are most appropriate to academic decisions makers and faculty. They tend to be around functionality and usability rather than how to download, install, and configure a LAMP environment. Pat asserted that much of the value of open source community translates to improved code and support for technologists. Although the forums can be very helpful to end users, active user forums are not unique to OSS, but are evident also in proprietary communities.</para>
    </section>
    <section id="id-270892903259">
      <title>How Many Licks Does It Take To Get To The Data Center Of Your Campus?</title>
      <para id="id15120576">In the end, Pat asks us “What role should end-users play identifying specific software?” His answer is that they should not be identifying specific solutions. They should be developing feature lists, functional requirements, use cases, business rules, workflow, etc. and working with the IT department to ensure that the options meet their requirements.</para>
    </section>
    <section id="id-809294547852">
      <title>Comments</title>
      <para id="id9938829">Many of the comments that were made following Pat’s initial posting were mutually reinforcing, serving to clarify and refine some points. Most of the comments focused on the appropriate relationships between IT professionals and end users of educational applications and systems. Pat’s contention that one of the roles of an IT professional is to act as an interpreter or translator for end users was reinforced, but also challenged by Richard Wyles as being circumstantial, pointing out that the differences between OSS and proprietary software is frequently not technological. This being the case, a typical IT shop might not be so qualified to assess OSS and the supporting community. It was clear that the discussants agreed that there are differences between OSS and proprietary software, that the differences are important under many circumstances, that sometimes IT professionals are not in the best position to explain the differences, and that sometimes end users are not in the best position to understand what are the important or relevant differences, and these are some of the factors that mitigate the current impact of OSS on education.</para>
    </section>
  </content>
</document>