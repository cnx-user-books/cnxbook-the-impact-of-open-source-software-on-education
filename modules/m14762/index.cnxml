<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Open Source Software and the User Experience in Higher Education</title>
  <metadata>
  <md:content-id>m14762</md:content-id><md:title>Open Source Software and the User Experience in Higher Education</md:title>
  <md:abstract>Mara Hancock's contribution to the "OSS and OER in Education Series." In this post, she asks some questions and shares some insights about the changing nature of OSS in teaching and learning and relates it to its impact on user experience and teaching and learning methods.</md:abstract>
  <md:uuid>61b47e75-24dc-497e-95c3-bb04e6f85c49</md:uuid>
</metadata>
  <content>
    <para id="id3924266"><note id="eip-id47865177" type="Author Information">Author - Mara Hancock, "Open Source Software and the User Experience in Higher Education". Originally submitted July 11th, 2007 to the OSS and OER in Education Series, Terra Incognita blog (Penn State World Campus), edited by Ken Udas.</note></para>
    <section id="id-9381016976">
      <title>Open Source Software and the User Experience in Higher Education</title>
      
      <para id="id9302531">
        <emphasis>Wednesday, July 11th, 2007 by Mara Hancock</emphasis>
      </para>
      <para id="id10317873">Open source software has moved up the technology stack. We are now seeing consumer software such as Content Management, Learning Management, Portals, and other Web 2.0 tools all emerging directly out of open and community source efforts which provide unique opportunities for higher education to address the unique needs of their academic constituencies. But do we have what it takes to do this successfully? Do we have the right skills in our development shops? Can we bridge the divide created by distributed development teams to make for meaningful and seamless applications that will meet the work flows of all our users? How does the fact that we are in a teaching and learning environment impact that work and the methods we apply? This blog entry may be destined to ask more questions than I can answer! I hope that at the very least it might help to instigate a healthy dialog, illicit some emerging best practices from open and community source communities and from our — often less visible — local environments.</para>
      <para id="id7416051">Let me enter into this conversation by way of a brief introduction to the work that has influenced my thinking in this area.</para>
      <para id="id5929109">UC Berkeley has been actively working on <link url="http://sakaiproject.org/">Sakai</link> since early 2005, when it was solely a grant and University funded project. We continue to be actively involved as it transitions to a full-fledged open source foundation model. I have been on the Sakai board of directors through this time. We are also a core member on the <link url="http://fluidproject.org/">Fluid Project</link>, recently funded by the <link url="http://mellon.org),/">Mellon Foundation</link>, along with the University of Toronto (PI), Cambridge University, York University, UBC, and experts in usability, accessibility, and UI design across the globe. This community source project was created to focus on addressing the <link url="http://www.jstor.org/view/00031224/di974191/97p1125w/0">precarious value</link> of UI and accessibility design in community and open source development work. In addition, UC Berkeley will be a core partner on the upcoming <link url="http://swik.net/Kuali">Kuali Student Project</link>, which, as a project, has boldly declared a determination to be user-centered from day one. As you can see, as an organization UC Berkeley is deeply embedded in – and increasingly reliant on – open source applications, and in particular the community source projects, to deliver critical and integral functionality to our student and instructors every day. If these users – the heart and soul of our university’s endeavors – cannot use these tools to successfully fulfill their goals we are not doing our jobs.</para>
      <para id="id3547979">Most of the findings in this entry are from personal reflection from my experience with the above community source projects, talking with colleagues involved in a variety of open source projects, and blogs and writing from across the web.</para>
    </section>
    <section id="id-344316988661">
      <title>Delightful Software in Community &amp; Open Source Software</title>
      <para id="id8668255">When I first heard my fellow Sakai board member, CIO Brad Wheeler from Indiana University, refer to “user delight” as a strategic goal, I was slightly uncomfortable. The term “usability” is so much more utilitarian and sets a nice solid, non-evocative baseline. Don’t get me wrong, I want the BEST user experience possible, but “delight?” So I ask you, why not “user delight?” In fact, shouldn’t usable software simply be the bottom line? If we are going to be in the software development business, shouldn’t we be aiming to, at the very least, satisfy, and even better, create an experience that is welcomed — even sought after! Wouldn’t that be success?! In fact, when I step beyond my prudishness and my fear of failure, I do agree with Brad. Community and open source communities, where higher ed IT shops are striving to create superior software “by academia and for academia” are ideally positioned (at least theoretically) to achieve user delight. However, in order to do this we need to carefully examine the skills and resources and sometimes-unusual alliances that may be required to be successful in achieving this goal.</para>
      <para id="id8015330">To begin, let’s be clear, poor usability in software applications is not relegated solely to the domain of open source. Many a commercial product has been slotted for demise – often prior to launch — because of poor usability. Indeed, as evidenced in many a UI listserv, UI design faces challenges in communicating its value across the spectrum of workplaces (spend a day or so on the <link url="http://beta.ixda.org/">IXDA</link> list to observe this). Clearly usability problems are not the sole reason for what is reportedly an over 70% failure rate of software projects. But I would hazard to guess that if you are willing to broadly define usability as “a useful and satisfied user experience (UX),” and not just solely issues related to interface design, that a large portion of these failures are likely to indeed be tracked back to usability. While many of the symptoms experienced by commercial and open source development teams are similar, I expect that the solutions applied will often, and necessarily, be different in order to accommodate the cultural and organizational differences between the environments, as reflected in Eric S. Raymond’s “<link url="http://www.catb.org/~esr/writings/cathedral-bazaar/">The Cathedral and the Bazaar</link>.”</para>
      <para id="id4029840">I have attempted to outline some of the challenges to the development of a delightful user experience in OSS and Community Source products from the perspective of those projects coming out of higher education for higher education. Many of these issues are interlacing and multi-layered and I don’t expect to create an all encompassing list, but to at least capture a general survey of some of the salient points.</para>
    </section>
    <section id="id-35186708698">
      <title>Distributed Development Teams — The Good, the Bad, and the Inevitable</title>
      <para id="id5059266">One of the huge benefits of developing open source products is that development can happen anywhere — and hopefully it does! In order to enable these distributed development teams to deliver in a timely manner, it is often necessary to create frameworks that allow the creation an implementation of loosely coupled tools. From many perspectives, this is a good thing to do: organizationally it allows open source teams to work efficiently (eliminate the coordination costs), and architecturally it provides much greater flexibility.</para>
      <para id="id8483788">However, distributed teams introduce several UX challenges. Requirements developed in the silo of a remote team tend to focus on the requirements and business rules as expressed in that environment. For example, UC Berkeley might tend toward defining the business rules for the Gradebook based upon our campus policies rather than doing the extra work required to generalize across a wide range of institutions and global cultures. This behavior makes good local sense since as institutions we are driven by enlightened self-interest and need to ensure that we meet the needs of our local users with our local resources. However, producing a tool that only creates interactions based on the primacy of UC Berkeley’s business rules often effectively lowers the ability for other schools to leverage the tools and increases the total cost of adoption.</para>
      <para id="id10586872">Another UX challenge is that working in tool silos makes it difficult to create a coherent, “holistic” environment for the end-user. Many user goals are based on work flows that cut across tool sets. This has been an oft-cited usability problem within Sakai. Users don’t think within the same categories and silos as the development teams work.</para>
    </section>
    <section id="id-533129837147">
      <title>A Code-Centric Culture</title>
      <para id="id3549609">Open source software has historically been developed for and by developers. It is a meritocracy where individuals gain respect through their direct contributions to the end product. This creates an intrinsic reward system for the developers whereby respect and privileges are accorded to those who do things like “play well with others,” provide good feedback and assistance, but most importantly contribute good, solid, workable code.</para>
      <para id="id7102030">UI Designers generally don’t produce code. UI Designer Rashmi Sinha talks about this issue in <link url="http://www.rashmisinha.com/archives/05_04/open-source.html">her blog</link>,</para>
      <para id="id10408512">
        <quote id="id11422175" display="block"/>
      </para>
      <para id="id3720495">
        <quote id="id10124845" display="block">“…The problem of currency: In any system people exchange goods and services using some type of currency. The currency could be any arbitrary thing - it could be fish, cows, or massages. In the open source world, it happens to be code. The problem is that usability professionals generally do not write code.”</quote>
      </para>
      <para id="id10480560">While quite successful for projects such as Linux and Apache, this is problematic for end-user applications that are used by the faculty and students in higher ed to support their daily scholarly, teaching, and learning activities. Developers can no longer design for themselves; they have to design for users whose goals are nothing like their own (a good read on this is Alan Cooper’s book, “<link url="http://books.google.com/books?id=04cFCVXC_AUC&amp;dq=the+inmates+are+running+the+asylum&amp;pg=PP1&amp;ots=jeBfU2q-lQ&amp;sig=igEcsctX-8H8pXu0n-lWNeM8NBM&amp;prev=http://www.google.com/search?q=the+inmates+are+running+the+asylum&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a&amp;sa=X&amp;oi=print&amp;ct=title">The Inmates are running the Asylum</link>“). Developers need UI Designers and Instructional designers to help them translate instructional, scholarly goals into specifications and prototypes. However, in an environment where code is king, what rewards are available for individuals with these other critical skills to participate? Do we even have the right ecosystem in which for them to engage them in the first place?</para>
    </section>
    <section id="id-913189424121">
      <title>The Right People for the Right Job</title>
      <para id="id4474937">As IT managers, we are probably the first to advocate for the right tool for the right job. However, we continually seem to hire a relative monoculture of IT professionals, thinking that if we just add another programmer all our problems will be solved! After talking with many IT managers across higher ed, it appears that UI design (whether it be User Research, Interaction Design, Visual Design, or Information Architecture) is rarely a formal part of their cycle or designers a regular part of the team. If UI Designers are part of the team, they are often so sparse a resource as to absolutely ensure that they won’t have enough time to get engaged early enough or long enough. This means that the few teams that are able to contribute UI designers to an open source effort, have a hard time being impactful. This is made worse by the fact that designers are often embedded in distributed teams and not looking across the product, inhibiting a holistic user-centered approach.</para>
      <para id="id7311680">This inevitably creates a gap between expectations and deliverables and creates a tension that is exacerbated by the lack of recognition for UI deliverables that arrive unaccompanied by code.</para>
      <para id="id10673771">Another challenge in creating applications for academia is that many of the user goals are embedded in pedagogical methods that may be discipline specific or not expressed in a generalizable way. Instructional designers and faculty are rarely part of a development team. In the higher education community source environment we have an opportunity to remedy this. It may require reaching across local organizational divides to ensure that the user and instructional goals are adequately being met: Often, instructors don’t speak the language of technology, so the instructional designer can help translate, generalize, and communicate their needs. In turn, the instructional designer often doesn’t speak the language of the application programmer, and the UI designer can help translate and represent their needs within the design and work flow of the application for the developers. <link url="http://download.neooffice.org/neojava/welcome.php?product=NeoOffice%202.1&amp;host=superg.local.&amp;buildmachine=pluby:guibomacmini.local.">This diagram</link> attempts to express the relationship between these different areas of expertise.</para>
      <figure id="id7204511">
        <media id="id3773312" alt=""><image src="../../media/graphics1-b511.png" mime-type="image/png" height="203" width="573"/></media>
      </figure>
      <para id="id10759609">The transparency of open source projects in higher education helps development and instructional support teams engage faculty and students in the process of creating the online environment that they need. We are uniquely situated smack dab in the middle of our own usability lab. There are few commercial or open source environments that can count themselves as this lucky. One of the biggest barriers to implementing a user centered design process that I have heard from UI Designers working in the private sector is their inability to gain consistent access to their users. Let’s make the most of our opportunity!</para>
    </section>
    <section id="id-943951152233">
      <title>Flexibility of OSS</title>
      <para id="id9874545">One of the largest benefits of open source software can also be a sizable UX challenge. The ability to easily localize and change the code means that often development teams and users don’t have a common or consistent experience and it is difficult to conduct user testing. On the one hand, proprietary products with closed code won’t let us make the experience more meaningful to our users, but on the other, with open source we have the unique opportunity to make a mess of it! An instance of uPortal at UBC may be completely different from uPortal at Yale. So how do we conduct usability tests? This issue is something that the <link url="http://fluidproject.org/">Fluid Project</link> is exploring now as it prepares for its first round of “<link url="http://wiki.fluidproject.org/x/RwAF">user experience walk-throughs” on Sakai, Moodle, and uPortal</link>. They have designed a set of protocols that are already being utilized by other community source projects.</para>
    </section>
    <section id="id-428345467803">
      <title>User-Friendly Architectures and Technologies</title>
      <para id="id4047652">Users of Open Source software are not only the end-users, they are also the designers, administrators, and implementation teams (hence documentation is also a huge barrier in OSS). When designing open source applications or platforms, making the software usable for these users is also important. In the case if UI designers, choosing presentation layer frameworks which are compatible with standard mark-up languages is important. The Fluid Project is working across projects, attempting to identify user interactions that cross academic software and develop accessible open source UI components that will be mapped to design patterns (<link url="http://developer.yahoo.com/ypatterns/">http://developer.yahoo.com/ypatterns/</link>, <link url="http://designinginterfaces.com/">http://designinginterfaces.com)</link>. For site administrators and integration teams, documentation and set-up wizards will be key. Design patterns for these activities should be able to also be mapped to reusable components and documentation templates.</para>
      <para id="id9738203">While these issues only represent a subset of the details surrounding the challenges to creating delightful academic software, I think they highlight some of the opportunity as well. I am optimistic that through the technical, UI, and advocacy work of the Fluid Project and participating community and open source projects, we will be able to impact change both institutionally and within the open source organizations. I expect and hope that through forums such as Terra Incognita there will be more occasions for those of us in IT management, those engaged in supporting the teaching and learning endeavor, UI design, and programming across our campuses to find ways to bridge the divides both organizationally and culturally, and to collaborate in creating user-delightful open source software. You can find links to a number of related articles on UI design and open source usability on my del.icio.us site, tagged as “OSUI” (Open Source UI). Happy reading! </para>
      <section id="id-644915846743">
        <title>Comments</title>
        <para id="id7727658">
          <emphasis>8 Responses to “Open Source Software and the User Experience in Higher Education”</emphasis>
        </para>
        <section id="id-344500696776">
          <title>1. mfeldstein - July 11th, 2007 at 4:21 pm </title>
          <para id="id10297204">Great piece, Mara. To my mind, this point is particularly critical:</para>
          <para id="id4092598">
            <quote id="id4008148" display="block">“Another challenge in creating applications for academia is that many of the user goals are embedded in pedagogical methods that may be discipline specific or not expressed in a generalizable way. Instructional designers and faculty are rarely part of a development team. In the higher education community source environment we have an opportunity to remedy this. It may require reaching across local organizational divides to ensure that the user and instructional goals are adequately being met: Often, instructors don’t speak the language of technology, so the instructional designer can help translate, generalize, and communicate their needs. In turn, the instructional designer often doesn’t speak the language of the application programmer, and the UI designer can help translate and represent their needs within the design and work flow of the application for the developers.”</quote>
          </para>
          <para id="id5180054">Programmers are from Mars; teachers are from Venus.</para>
          <para id="id3716679">Given the distributed nature of Open Source communities, what realistic, low-barrier-to-entry methods can we employ to narrow the communication gap?</para>
        </section>
        <section id="id-111924239586">
          <title>2. Mara Hancock - July 12th, 2007 at 10:55 am </title>
          <para id="id7981631">Hi Michael. You definitely picked up on what I consider to be an interesting challenge and perhaps the greatest opportunity for improving user experience. I am not sure I have hit on the perfect formula for this, but I do think the low barrier-to-entry solutions have to begin at home in our local environments. And that means that those of us in leadership positions have to start with evaluating the skills we have on board currently and do a gap analysis on the ecosystem. At UC Berkeley we have been lucky enough to start with some instructional development staff, and we have been able to grow that and build stronger partnerships with other campus units in this domain as well (Library, OED, Grad Instruction). However, as a campus we were completely deficient in the UI side of the house (also Project Mgmt., but that is another article and frankly since engaging in community source projects I am beginning to think we all need a new breed of agile PMs…).</para>
          <para id="id4461000">This may be controversial, but I don’t think the right way to approach this is through the traditional faculty committee advisory group. This can get us trapped in serving individual wish lists. I think we can learn a lot from the needs assessment and field work from the User Experience field and find a way to apply that both at a project level and a slightly higher level.</para>
          <para id="id9446523">One of our challenges at a large university is visibility. We are often addressing the majority need and hear from the minority. I know there is a way to engage faculty in the community source process that may also help them move beyond their silo. I truly believe it matches the values of higher education, and we staff need to find ways of communicating that better. The recent SakaiCal symposium that was hosted down at Claremont McKenna College had a very nice mix of faculty, librarians, technologists. It was well balanced. That gave me hope, but it still tended to slip into a “what are you going to do for me” tone. I think UX folks can become the translators and bridge that gap. The problem is that we don’t have enough of them. We haven’t yet created the balanced ecosystem.</para>
          <para id="id10586868">So as usual, change starts at home.</para>
        </section>
        <section id="id-656367805309">
          <title>3. Ken Udas - July 14th, 2007 at 3:13 pm </title>
          <para id="id4030464">Mara &amp; Michael, First, great post and comments. While reading through this post what struck me was the fact that at many universities (I am using Penn State World Campus as a reference, but I do not think that we are unique) there is an opportunity for:</para>
          <list id="id7903104" list-type="bulleted">
            <item>a learning designer, educational technologist, and faculty member to work together and provide insights into the user experience with the learning management and course authoring environment every time a course is developed and refined,</item>
            <item>a student, faculty member, and learning designer to get input on the user experience when a course is taken, and</item>
            <item>general information to be collected continuously on user experience by user support, customer services, and other points of learner and faculty contact.</item>
          </list>
          <para id="id7493515">Much of the work that we do around learning design, development, and “delivery” has a relatively predictable and reliable workflow. How might an OSS project take advantage of all this user contact and predictable workflow to learn about and improve user experience? Note that software designers and developers are not included in our regular work processes. In your opinion, do you believe that there are certain qualities that an OSS project/community will process that will make it better at improving user experience? If so, what do you think some of those qualities might be?</para>
          <para id="id6815294">Thanks!</para>
        </section>
        <section id="id-955681375694">
          <title>4. Mara Hancock- July 15th, 2007 at 7:20 pm </title>
          <para id="id7636162">Ken, I am not totally clear on your question, but I think you are saying that my assumption about having software designers and developers embedded is not a given and asking whether there is something inherent in OSS itself that will make improving user experience more likely.</para>
          <para id="id7960323">One way I think a team that lacks software development and design resource but is rich in learning design can make a difference is to partner with OSS teams working with learning design or LMS tools. UX designers and developers alike need to talk to and observe people who are engaged in these activities to make sure these are expressed adequately prior to any software being developed and that the designers truly understand the users and their end-goals. However, this means managers need to be willing to make time for this to happen, and that means having the ability to express a return on investment. Some institutions and managers seem “get this” in a way that seems like it is in their genes! Others can’t see the benefit. Those of us engaged in OSS — especially community source — have to get better at making that case.</para>
          <para id="id10428807">In regards to the qualities of open source communities being more or less suited to improving user experience, I will say that my experience will be slanted toward my Sakai and Fluid experience. Using these two projects as a model, I would say that we are uniquely situated to address the user experience because we are embedded with our users, and many of us are users. Therefore, we feel the pain of our own mistakes beyond the market. I think this is also true for many developers of Apache projects or Linux. We are challenged in that many of us haven’t hired the designers we need, leaving us in a situation where we can fix the plumbing but the house is an ugly mess (I say that lovingly). We also have the ability to learn from our mistakes and pool resources in a way that a commercial venture can’t (without acquisitions or ugly patents).</para>
          <para id="id2961974">Did this address your questions at all, or was I way off base?</para>
        </section>
        <section id="id-920822001438">
          <title>5. Ken Udas - July 17th, 2007 at 5:50 am </title>
          <para id="id3134647">Mara, Thank you for moving this along. I think that you got the spirit of my question. It was a bit ambiguous. I was trying to make a few points and then ask a question. I’ll start with the question first this time.</para>
          <para id="id5730637">
            <quote id="id12184966" display="block">Do you think that there are characteristics possessed by OSS projects and communities that make those projects better at user driven (at least user informed) design and development?</quote>
          </para>
          <para id="id4645699">This question is based on your discussion about a) “Delightful Software,” b) the role that UX plays in a “Delightful Experience,” and c) some of the observations that you highlight about Code Centric-Culture and your reference to UI Designer Rashmi Sinha.</para>
          <para id="id3272315">I was suggesting that many university-based online learning groups do not employ application developers and if they use an OSS application they do not apply substantive resource to code development for the project. I recognize that Sakai might be an exception because of its legacy, but as larger numbers of colleges, universities, and other education providers adopt Sakai, I would assume that this will likely become the case if is it is not already. That said, many online learning groups do have educational technologists, learning designers, graphics and multi-media artists/developers, content developers (frequently faculty), project managers, and other professionals involved with identifying, designing, developing, and teaching courses.</para>
          <para id="id3836713">Many online learning groups also have a process in which learner experience is captured through evaluation. This is pretty much the case at Penn State World Campus, and was also true at the Open Polytechnic of New Zealand. In the case of the World Campus we will be developing and revising dozens of courses and delivering &amp; teaching hundreds of courses at any point in time. It would seem to me that the knowledge gathered through the process of designing, developing, authoring, and offering courses, could be well leveraged by an OSS community to enhance UI/UX, which points back to my question. What can OSS projects and communities do to capture this knowledge from application users who will not directly contribute code to a project? This is based on the assumption that the type of knowledge that could be captured and generated through design, development and teaching processes would be useful to user interface design and supporting improved user experience.</para>
          <para id="id3165668">I am asking the question above, because it might play into an application evaluation and selection process. OSS projects and communities that are best able to enhance user experience through mechanisms that allow for non-coder engagement might be a software/community selection criteria.</para>
          <para id="id3628956">This is an open question. If anybody has experience with other OSS projects or across multiple projects, please chime in with your thoughts on this.</para>
          <para id="id10020006">Hmmmm, I am not sure if I cleared or further muddied the waters! Cheers, Ken</para>
        </section>
        <section id="id-787612081053">
          <title>6. Ken Udas - July 18th, 2007 at 3:26 pm </title>
          <para id="id8705265">Hello, I wanted to make an observation associated with the challenge of user experience, usability testing, and localization that you identify in the “Flexibility of OSS” section of your post. I think that this relates to Jean-Claude’s recent posting, which included a project outline for a FOSS stack to support educational organizations, one of the key requirements identified was the ability to customize/localize across countries and cultures to meet local needs. It seems to meet that the balancing of usability and localization is one of the key challenges while trying to use FOSS to reduced some barriers to online learning globally. This issue seems to be one of the primary goals of the Fluid Project.</para>
          <para id="id6552608">
            <quote id="id12187469" display="block">Fluid Will:</quote>
          </para>
          <para id="id2987800">
            <quote id="id8709390" display="block">Help address the diverse needs represented within education, including needs related to ability, language, culture, discipline and institutional conventions</quote>
          </para>
          <para id="id3019349">Do you have a strategy to achieve this objective and have you had much participation from potential stakeholders (universities, foundations, governments, etc.) in developing regions or NGOs that work in developing regions?</para>
          <para id="id3641570">Cheers, Ken</para>
        </section>
        <section id="id-0149875651512">
          <title>7. Mara Hancock - July 21st, 2007 at 7:52 pm </title>
          <para id="id4941525">Some thoughts on Ken’s July 17th posting:</para>
          <para id="id10369275">
            <quote id="id8700808" display="block">Many online learning groups also have a process in which learner experience is captured through evaluation. This is pretty much the case at Penn State World Campus, and was also true at the Open Polytechnic of New Zealand. In the case of the World Campus we will be developing and revising dozens of courses and delivering &amp; teaching hundreds of courses at any point in time. It would seem to me that the knowledge gathered through the process of designing, developing, authoring, and offering courses, could be well leveraged by an OSS community to enhance UI/UX, which points back to my question. What can OSS projects and communities do to capture this knowledge from application users who will not directly contribute code to a project? This is based on the assumption that the type of knowledge that could be captured and generated through design, development and teaching processes would be useful to user interface design and supporting improved user experience.</quote>
          </para>
          <para id="id6356449">So one distinction that is useful is between the evaluation of the teaching and learning experience taking place and the user experience in interacting with the software. These can get blurry sometimes, especially in completely online courses. However, a problem with appropriate online instruction techniques are different than usability problems. I think of usability problems as when the software gets in the way of someone achieving their goals (such as submitting a quiz, sending email to an instructor, tracking their grades, etc.). An ineffective online learning experience might include UI issues such as too much on screen reading, not enough examples or doing, but it is not inherently poor usability.</para>
          <para id="id9728808">In higher ed, IF we have the right roles on board, the UI team working on any sort of learning tool absolutely has to engage the team of instructional designers to make effective OSS learning environments. The incentive for Instructional designers is that they influence the direction of the learning environment and they can directly declare success to their faculty who have been asking for these things. Small fixes and successes matter and create a positive reinforcement between UI, ID, and instructors. In a commercial environment, those quick iterations and customizations were either impossible or incredibly far a few in-between releases.</para>
          <para id="id3738692">We have IDs and UI folks under the same umbrella (mine!) at UCB. Each release is a discussion (the “bSpace Council”) between ID, UI, Development, Operations, and Sponsor (me). We have a rubric that we use to rate potential new tools which ranks user need and support the highest, then usability, then technical and operations. The rubric is a guideline and open for discussion. We consider tools based on user feedback (coming in from the ID and support team), technical improvements, administration needs, and needs from other stakeholders such as the Registrar, Library, and profession schools. </para>
        </section>
        <section id="id-940633972391">
          <title>8. Mara Hancock - July 21st, 2007 at 7:59 pm </title>
          <para id="id7997836">Hi Ken, You asked:</para>
          <para id="id9730034">
            <quote id="id6951506" display="block">Fluid Will:</quote>
          </para>
          <para id="id4024174">
            <quote id="id12633404" display="block">Help address the diverse needs represented within education, including needs related to ability, language, culture, discipline and institutional conventions</quote>
          </para>
          <para id="id8378067">
            <quote id="id12633413" display="block">Do you have a strategy to achieve this objective and have you had much participation from potential stakeholders (universities, foundations, governments, etc.) in developing regions or NGOs that work in developing regions?</quote>
          </para>
          <para id="id8375562">Fluid is an open source project (anyone can participate) and we are embedded in each of the core projects, Sakai, Kuali Student, and uPortal. While each of the core universities that are recipients of the grant are english speaking, we have found that there are many differences in language as well as educational cultures and assumptions. For example, the brits cannot understand the U.S. obsession with grades. We also hope that some of the global members of these various projects will start to join in. The Dutch members of Sakai have shown real interest as well as the South Africans and Australians. At this point we don’t have any NGOs engaged that I know of, however I think there is real opportunity to engage them through the open content movement. Jutta Treviranus, the PI on the project, is very engaged on the international specification bodies.</para>
        </section>
      </section>
    </section>
  </content>
</document>